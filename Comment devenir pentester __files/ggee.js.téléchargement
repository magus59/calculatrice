/* Mobile Detect */
var siteDomain = location.hostname;
var CurrentUrl = window.location.href;
var md = new MobileDetect(window.navigator.userAgent);
var detectMobile = 'computer';

if (typeof md.mobile() !== 'undefined' && md.mobile()) {
    detectMobile = "phone";
}
if (typeof md.tablet() !== 'undefined' && md.tablet()) {
    detectMobile = "tablet";
}


/* visibilityState */
function getHiddenProp() {
    var prefixes = ['webkit', 'moz', 'ms', 'o'];
    // if 'hidden' is natively supported just return it
    if ('hidden' in document) {
        return 'hidden';
    }
    // otherwise loop over all the known prefixes until we find one
    for (var i = 0; i < prefixes.length; i++) {
        if ((prefixes[i] + 'Hidden') in document) {
            return prefixes[i] + 'Hidden';
        }
    }
    // otherwise it's not supported
    return null;
}

var bHavePV = getHiddenProp();
var bInitialShow = false;

if (bHavePV) {
    document.addEventListener("visibilityChange", handleVisEvt);
} else {
    // console.log("PageVisibility is not present"); // track page view normally
    // when PageVisibility is not present
}

function handleVisEvt() {
    var value = bInitialShow;

    if (document.visibilityState == "prerender") {
        // console.log("PageVisibility is pre-rendering"); // might be interesting
        // to keep track of pre-rendering
    }
    if (document.visibilityState == "visible" && !bInitialShow) {
        bInitialShow = true; // don't trigger this code again
        // console.log("PageVisibility is visible and trigger will not push again");
    }
    value = true;

    return value;
}


/* CreateCookie */
var j = new Date;
j.setTime(j.getTime());
j = new Date(j.getTime());

// console.log(j.toString());

function crumbleCookie(a) {
    for (var d = document.cookie.split(";"), c = {}, b = 0; b < d.length; b++) {
        var e = d[b].substring(0, d[b].indexOf("=")).trim(),
            i = d[b].substring(d[b].indexOf("=") + 1, d[b].length).trim();
        c[e] = i
    }
    if (a) {
        return c[a] ? c[a] : null;
    }
    return c
}

function bakeCookie(a, d, c, b, e, i) {
    var j = new Date;
    j.setTime(j.getTime());
    c && (c *= 864E5);
    j = new Date(j.getTime() + c);
    document.cookie = a + "=" + d + (c ? ";expires=" + j.toGMTString() : "") + (b ? ";path=" + b : "") + (e ? ";domain=" + e : "") + (i ? ";secure" : "")
}


/* Let's create the __dplz cookie*/
function __dplz(n) {
    var a = getTrafficSource(n, siteDomain);

    a = a.replace(/\|{2,}/g, "|");
    a = a.replace(/^\|/, "");
    a = unescape(a);
    60

    bakeCookie(n, a, 0.125, "/", siteDomain, ""); //Cookie expiration sets to 3 hours ((1/24)*3)
};

/* Let's create the __dpla cookie*/
function __dpla(n) {
    var f = visitData(n);
    f = unescape(f);

    bakeCookie(n, f, 0.125, "/", siteDomain, ""); //Cookie expiration sets to 3 hours ((1/24)*3)
};

/* Let's create the __dplf cookie*/
function __dplf(n) {
    var j = new Date;
    j.setTime(j.getTime());
    j = new Date(j.getTime());
    var g = 1;
    g = unescape(g);

    bakeCookie(n, g, 0.125, "/", siteDomain, ""); //Cookie expiration sets to 3 hours ((1/24)*3)
};

/* Let's create the mobile_detect cookie*/
function mobile_detect(n) {
    var j = new Date;
    j.setTime(j.getTime());
    j = new Date(j.getTime());

    bakeCookie(n, detectMobile, 30, "/", siteDomain, ""); //Cookie expiration sets to 30 days
};

/* Let's create the first_page cookie*/
function first_page(n) {
    var j = new Date;
    j.setTime(j.getTime());
    j = new Date(j.getTime());

    bakeCookie(n, CurrentUrl.substring(0, CurrentUrl.indexOf('?') != -1 ? CurrentUrl.indexOf('?') : CurrentUrl.length), 30, "/", siteDomain, ""); //Cookie expiration sets to 30 days
};

/* Check is cookie exists */
function getCookie(name) {
    var dc = document.cookie;
    var prefix = name + "=";
    var begin = dc.indexOf("; " + prefix);
    if (begin == -1) {
        begin = dc.indexOf(prefix);
        if (begin != 0) {
            return null;
        }
    } else {
        begin += 2;
        var end = document.cookie.indexOf(";", begin);
        if (end == -1) {
            end = dc.length;
        }
    }
    return unescape(dc.substring(begin + prefix.length, end));
}

function doSomething() {
    var value = false;
    var myCookie = getCookie("__dplf");

    if (myCookie == null) {
        // do cookie doesn't exist stuff;
        value = true;
    }

    return value;
}


/*Provide __dpla information*/
function visitData() {
    var domaineHash = Math.floor((Math.random() * 10000000) + 1);
    var dateNow = new Date().getTime() / 1000;
    var firstVisit = "";
    var lastVisit = "";
    var currentVisit = dateNow;
    var sessionNumber = "";

    /*Test firsVisit*/
    if (firstVisit !== dateNow) {
        firstVisit = dateNow;
        lastVisit = dateNow;
        sessionNumber = 1;
    }
    ;

    var value =
        domaineHash +
        '.' + domaineHash +
        '.' + firstVisit +
        '.' + lastVisit +
        '.' + currentVisit +
        '.' + sessionNumber;

    return value;
}


function getParam(s, q) {
    try {
        var match = s.match('[?&]' + q + '=([^&]+)');
        return match ? match[1] : '';
    } catch (e) {
        return '';
    }
}

/*Provide __dplz information*/
function calculateTrafficSource() {
    var dplcsr = '', dplcmd = '', dplccn = '', dplctr = '', dplcct = '', gclid = '', gclidSynapse = '';

    // Identify the method
    var ref = document.referrer;
    ref = ref.substr(ref.indexOf('//') + 2);
    ref_domain = ref;
    ref_path = '/';
    ref_search = '';
    var url_search = document.location.search;


    if (getParam(url_search, 'utm_source').length >= 1) {
        dplcsr = getParam(url_search, 'utm_source');
        dplcmd = getParam(url_search, 'utm_medium').length >= 1 ? getParam(url_search, 'utm_medium') : '(not set)';
        dplccn = getParam(url_search, 'utm_campaign').length >= 1 ? getParam(url_search, 'utm_campaign') : '(not set)';
        dplctr = getParam(url_search, 'utm_term').length >= 1 ? getParam(url_search, 'utm_term') : '';
        dplcct = getParam(url_search, 'utm_content').length >= 1 ? getParam(url_search, 'utm_content') : '';
        gclidSynapse = getParam(url_search, 'gclid').length >= 1 ? getParam(url_search, 'gclid') : '';
        method = 'dpl_source';
    } else if (getParam(url_search, 'gge_source').length >= 1) {
        dplcsr = getParam(url_search, 'gge_source');
        dplcmd = getParam(url_search, 'gge_medium').length >= 1 ? getParam(url_search, 'gge_medium') : '(not set)';
        dplccn = getParam(url_search, 'gge_campaign').length >= 1 ? getParam(url_search, 'gge_campaign') : '(not set)';
        dplctr = getParam(url_search, 'gge_term').length >= 1 ? getParam(url_search, 'gge_term') : '';
        dplcct = getParam(url_search, 'gge_content').length >= 1 ? getParam(url_search, 'gge_content') : '';
        gclidSynapse = getParam(url_search, 'gclid').length >= 1 ? getParam(url_search, 'gclid') : '';
        method = 'gge_source';

        // console.log(gclidSynapse);
    } else if (getParam(url_search, 'gclid').length >= 1) {
        gclid = getParam(url_search, 'gclid');
        dplcsr = '';
        dplcmd = '(not set)';
        dplccn = 'undefined';
        dplcct = '(none)';
        gclidSynapse = getParam(url_search, 'gclid').length >= 1 ? getParam(url_search, 'gclid') : '';
        method = 'gclid';
    } else if (ref) {
        // separate domain, path and query parameters
        if (ref.indexOf('/') > -1) {
            ref_domain = ref.substr(0, ref.indexOf('/'));
            ref_path = ref.substr(ref.indexOf('/'));
            method = 'ref';
            if (ref_path.indexOf('?') > -1) {
                ref_search = ref_path.substr(ref_path.indexOf('?') + 1);
                ref_path = ref_path.substr(0, ref_path.indexOf('?'));
            }
        }
        var search_engines = [['bing', 'q'], ['google', 'q'], ['yahoo', 'p'], ['baidu', 'q'], ['yandex', 'text'], ['ask', 'q'], ['duckduckgo', 'q'], ['naver', 'query'], ['baidu', 'wd']]; //List of search engines
        // Tester le referral, est-ce organic ou referral
        dplcmd = 'referral';
        dplcsr = ref_domain;
        dplcct = '(none)';
        dplccn = '(referral)';
        method = 'ref';
        // Extract dplctr for organic dplcsr
        for (var i = 0; i < search_engines.length; i++) {
            if (ref_domain.indexOf(search_engines[i][0]) > -1) {
                dplcmd = 'organic';
                dplccn = '(not set)';
                dplcsr = search_engines[i][0];
                dplctr = getParam(ref_search, search_engines[i][1]) || '(not provided)';
                break;
            }
        }
    } else {
        dplcsr = '(direct)';
        dplccn = '(direct)';
        dplcmd = '(none)';
        method = 'direct';
    }

    return {
        'gclid': gclid,
        'dplcsr': dplcsr,
        'dplccn': dplccn,
        'dplcmd': dplcmd,
        'dplctr': dplctr,
        'dplcct': dplcct,
        'gclidSynapse': gclidSynapse,
        'method': method,
    };

}


/* Search engine and campaing parse */
function getTrafficSource(cookieName, hostname) {
    var trafficSource = calculateTrafficSource();
    var domaineHash = Math.floor((Math.random() * 10000000) + 1);
    var dateNow = new Date().getTime() / 1000;

    /* Let's create the variables*/
    var gclid = trafficSource.gclid.length > 0 ? '.utmgclid=' + trafficSource.gclid : '';
    var dplcsr = trafficSource.dplcsr.length > 0 ? '.utmcsr=' + trafficSource.dplcsr : '';
    var dplccn = trafficSource.dplccn.length > 0 ? '|utmccn=' + trafficSource.dplccn : '';
    var dplcmd = trafficSource.dplcmd.length > 0 ? '|utmcmd=' + trafficSource.dplcmd : '';
    var dplctr = trafficSource.dplctr.length > 0 ? '|utmctr=' + trafficSource.dplctr : '';
    var dplcct = trafficSource.dplcct.length > 0 ? '|utmcct=' + trafficSource.dplcct : '';
    var gclidSynapse = trafficSource.gclidSynapse.length > 0 ? '|dplgclid=' + trafficSource.gclidSynapse : '';

    var testData =
        gclid +
        dplcsr +
        dplccn +
        dplcmd +
        dplctr +
        dplcct +
        gclidSynapse +
        '';

    var sessionVisit =
        domaineHash +
        '.' + dateNow +
        '.' + '1' +
        '';

    var value =
        sessionVisit +
        testData +
        '';

    // console.log(trafficSource);

    return decodeURIComponent(value);
}


/* generateCookie_dpl */
function generateCookie_dpl() {
    var date = new Date();
    var fr_date = date.getUTCFullYear().toString() + ((date.getUTCMonth() < 9) ? '0' + (date.getUTCMonth() + 1).toString() : (date.getUTCMonth() + 1).toString()) + ((date.getUTCDate() < 10) ? '0' + date.getUTCDate().toString() : date.getUTCDate().toString());
    var session = crumbleCookie()['__dplz'];
    __dplf('__dplf');
    __dplz('__dplz');
    __dpla('__dpla');
    mobile_detect('mobile_detect');
    first_page('first_page');
}

/* generateCookie_firstpage */
function generateCookie_first_page() {
    var date = new Date();
    var fr_date = date.getUTCFullYear().toString() + ((date.getUTCMonth() < 9) ? '0' + (date.getUTCMonth() + 1).toString() : (date.getUTCMonth() + 1).toString()) + ((date.getUTCDate() < 10) ? '0' + date.getUTCDate().toString() : date.getUTCDate().toString());
    var session = crumbleCookie()['first_page'];
    first_page('first_page');
}

/* generateCookie_mobile_detect */
function generateCookie_mobile_detect() {
    var date = new Date();
    var fr_date = date.getUTCFullYear().toString() + ((date.getUTCMonth() < 9) ? '0' + (date.getUTCMonth() + 1).toString() : (date.getUTCMonth() + 1).toString()) + ((date.getUTCDate() < 10) ? '0' + date.getUTCDate().toString() : date.getUTCDate().toString());
    var session = crumbleCookie()['mobile_detect'];
    mobile_detect('mobile_detect');
}

/* Let's cook */
var gclidUrl = calculateTrafficSource('gclid')['gclid'];
var methodUrl = calculateTrafficSource('method')['method'];


if (handleVisEvt()) {
    if (doSomething()) {
        generateCookie_dpl();
    }
}

if (document.cookie.indexOf('mobile_detect') <= 0) {
    generateCookie_mobile_detect();
}
if (document.cookie.indexOf('first_page') <= 0) {
    generateCookie_first_page();
}